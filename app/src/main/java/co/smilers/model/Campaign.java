/**
 * Smiller
 * Api de servicios REST para la aplicación [https://www.smilers.co](https://www.smilers.co).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apps@groupware.com.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package co.smilers.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Campañas de satisfacción de usuarios
 **/
@ApiModel(description = "Campañas de satisfacción de usuarios")
public class Campaign {
  
  @SerializedName("code")
  private Long code = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("startDate")
  private String startDate = null;
  @SerializedName("endDate")
  private String endDate = null;
  @SerializedName("isPublished")
  private Boolean isPublished = null;
  @SerializedName("campaignHeaders")
  private List<CampaignHeader> campaignHeaders = null;
  @SerializedName("questionItems")
  private List<QuestionItem> questionItems = null;
  @SerializedName("campaignFooter")
  private List<CampaignFooter> campaignFooter = null;

  /**
   * Código único de la campaña
   **/
  @ApiModelProperty(value = "Código único de la campaña")
  public Long getCode() {
    return code;
  }
  public void setCode(Long code) {
    this.code = code;
  }

  /**
   * Nombre o titulo de la campaña
   **/
  @ApiModelProperty(required = true, value = "Nombre o titulo de la campaña")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   * Descripción u objetivo de la campaña
   **/
  @ApiModelProperty(value = "Descripción u objetivo de la campaña")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Fecha de inicio de la campaña (yyyy-MM-dd HH:mm:ss)
   **/
  @ApiModelProperty(value = "Fecha de inicio de la campaña (yyyy-MM-dd HH:mm:ss)")
  public String getStartDate() {
    return startDate;
  }
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  /**
   * Fecha de finalización de la campaña (yyyy-MM-dd HH:mm:ss)
   **/
  @ApiModelProperty(value = "Fecha de finalización de la campaña (yyyy-MM-dd HH:mm:ss)")
  public String getEndDate() {
    return endDate;
  }
  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }

  /**
   * Campaña activa para el público, para recibir calificaciones
   **/
  @ApiModelProperty(value = "Campaña activa para el público, para recibir calificaciones")
  public Boolean getIsPublished() {
    return isPublished;
  }
  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<CampaignHeader> getCampaignHeaders() {
    return campaignHeaders;
  }
  public void setCampaignHeaders(List<CampaignHeader> campaignHeaders) {
    this.campaignHeaders = campaignHeaders;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<QuestionItem> getQuestionItems() {
    return questionItems;
  }
  public void setQuestionItems(List<QuestionItem> questionItems) {
    this.questionItems = questionItems;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<CampaignFooter> getCampaignFooter() {
    return campaignFooter;
  }
  public void setCampaignFooter(List<CampaignFooter> campaignFooter) {
    this.campaignFooter = campaignFooter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return (this.code == null ? campaign.code == null : this.code.equals(campaign.code)) &&
        (this.title == null ? campaign.title == null : this.title.equals(campaign.title)) &&
        (this.description == null ? campaign.description == null : this.description.equals(campaign.description)) &&
        (this.startDate == null ? campaign.startDate == null : this.startDate.equals(campaign.startDate)) &&
        (this.endDate == null ? campaign.endDate == null : this.endDate.equals(campaign.endDate)) &&
        (this.isPublished == null ? campaign.isPublished == null : this.isPublished.equals(campaign.isPublished)) &&
        (this.campaignHeaders == null ? campaign.campaignHeaders == null : this.campaignHeaders.equals(campaign.campaignHeaders)) &&
        (this.questionItems == null ? campaign.questionItems == null : this.questionItems.equals(campaign.questionItems)) &&
        (this.campaignFooter == null ? campaign.campaignFooter == null : this.campaignFooter.equals(campaign.campaignFooter));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.isPublished == null ? 0: this.isPublished.hashCode());
    result = 31 * result + (this.campaignHeaders == null ? 0: this.campaignHeaders.hashCode());
    result = 31 * result + (this.questionItems == null ? 0: this.questionItems.hashCode());
    result = 31 * result + (this.campaignFooter == null ? 0: this.campaignFooter.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    
    sb.append("  code: ").append(code).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  isPublished: ").append(isPublished).append("\n");
    sb.append("  campaignHeaders: ").append(campaignHeaders).append("\n");
    sb.append("  questionItems: ").append(questionItems).append("\n");
    sb.append("  campaignFooter: ").append(campaignFooter).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
