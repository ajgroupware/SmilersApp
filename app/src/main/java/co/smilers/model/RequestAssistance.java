/**
 * Smiller
 * Api de servicios REST para la aplicación [https://www.smilers.co](https://www.smilers.co).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apps@groupware.com.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package co.smilers.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Solicitud de asistencia
 **/
@ApiModel(description = "Solicitud de asistencia")
public class RequestAssistance {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("campaign")
  private Campaign campaign = null;
  @SerializedName("headquarter")
  private Headquarter headquarter = null;
  @SerializedName("zone")
  private Zone zone = null;
  @SerializedName("questionItem")
  private QuestionItem questionItem = null;
  @SerializedName("meterDevice")
  private MeterDevice meterDevice = null;
  @SerializedName("cityCode")
  private Long cityCode = null;
  @SerializedName("registrationDate")
  private String registrationDate = null;

  /**
   * Identificador único de la solicitud
   **/
  @ApiModelProperty(value = "Identificador único de la solicitud")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Campaign getCampaign() {
    return campaign;
  }
  public void setCampaign(Campaign campaign) {
    this.campaign = campaign;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Headquarter getHeadquarter() {
    return headquarter;
  }
  public void setHeadquarter(Headquarter headquarter) {
    this.headquarter = headquarter;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Zone getZone() {
    return zone;
  }
  public void setZone(Zone zone) {
    this.zone = zone;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QuestionItem getQuestionItem() {
    return questionItem;
  }
  public void setQuestionItem(QuestionItem questionItem) {
    this.questionItem = questionItem;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public MeterDevice getMeterDevice() {
    return meterDevice;
  }
  public void setMeterDevice(MeterDevice meterDevice) {
    this.meterDevice = meterDevice;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getCityCode() {
    return cityCode;
  }
  public void setCityCode(Long cityCode) {
    this.cityCode = cityCode;
  }

  /**
   * Fecha en que se realizó la solicitud (yyyy-MM-dd HH:mm:ss)
   **/
  @ApiModelProperty(value = "Fecha en que se realizó la solicitud (yyyy-MM-dd HH:mm:ss)")
  public String getRegistrationDate() {
    return registrationDate;
  }
  public void setRegistrationDate(String registrationDate) {
    this.registrationDate = registrationDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestAssistance requestAssistance = (RequestAssistance) o;
    return (this.id == null ? requestAssistance.id == null : this.id.equals(requestAssistance.id)) &&
        (this.campaign == null ? requestAssistance.campaign == null : this.campaign.equals(requestAssistance.campaign)) &&
        (this.headquarter == null ? requestAssistance.headquarter == null : this.headquarter.equals(requestAssistance.headquarter)) &&
        (this.zone == null ? requestAssistance.zone == null : this.zone.equals(requestAssistance.zone)) &&
        (this.questionItem == null ? requestAssistance.questionItem == null : this.questionItem.equals(requestAssistance.questionItem)) &&
        (this.meterDevice == null ? requestAssistance.meterDevice == null : this.meterDevice.equals(requestAssistance.meterDevice)) &&
        (this.cityCode == null ? requestAssistance.cityCode == null : this.cityCode.equals(requestAssistance.cityCode)) &&
        (this.registrationDate == null ? requestAssistance.registrationDate == null : this.registrationDate.equals(requestAssistance.registrationDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.campaign == null ? 0: this.campaign.hashCode());
    result = 31 * result + (this.headquarter == null ? 0: this.headquarter.hashCode());
    result = 31 * result + (this.zone == null ? 0: this.zone.hashCode());
    result = 31 * result + (this.questionItem == null ? 0: this.questionItem.hashCode());
    result = 31 * result + (this.meterDevice == null ? 0: this.meterDevice.hashCode());
    result = 31 * result + (this.cityCode == null ? 0: this.cityCode.hashCode());
    result = 31 * result + (this.registrationDate == null ? 0: this.registrationDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestAssistance {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  campaign: ").append(campaign).append("\n");
    sb.append("  headquarter: ").append(headquarter).append("\n");
    sb.append("  zone: ").append(zone).append("\n");
    sb.append("  questionItem: ").append(questionItem).append("\n");
    sb.append("  meterDevice: ").append(meterDevice).append("\n");
    sb.append("  cityCode: ").append(cityCode).append("\n");
    sb.append("  registrationDate: ").append(registrationDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
